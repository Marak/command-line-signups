#!/usr/bin/env node

var colors = require('colors'),
    nj = require('nodejitsu-api'),
    exec = require('child_process').exec;

process.stdin.resume();
process.stdin.setEncoding("utf8");

var user = {};

function cleanInput (data) {
  var clean;

  //
  // Cleans the input of carriage return, newline
  //
  clean = data.toString().replace(/(\r\n|\n|\r)/gm,"");

  return clean;
}

function read (prompt, cb) { 
  process.stdout.write(prompt);
  process.stdin.once('data', function(chunk) {
    cb(cleanInput(chunk));
  });
}

function signup(user) {
  //
  // Attempt to signup with desired user name
  //

  var client = nj.createClient({
    remoteUri: 'http://api.nodejitsu.com'
  });

  process.stdout.write('\nAttempting to signup...\n'.white);

  client.users.create(user, function (err, result){
    process.stdout.write('\n');

    if (err) {
      process.stdout.write('Username '.white + user.username.magenta + ' is already taken!!\nPlease try again with a new username.\n\n'.white);
      process.stdout.write('If you think '.white + user.username.magenta + ' might be your account...\n'.white);
      process.stdout.write('Try running '.white + 'npm install jitsu -g'.magenta + ' in your local session \n'.white);
      process.stdout.write('Once you have'.white + ' jitsu '.magenta + 'installed you can type '.white + 'jitsu forgot'.magenta + ' to reset your password\n'.white);
      process.exit(1);
    }

    process.stdout.write('Great success!\n\n'.green);
    process.stdout.write('We are now sending an email to '.white.bold + user.email.magenta.bold + ' with further instructions\n\n'.white.bold);
    process.stdout.write('To get started we recommend installing our CLI tool '.white + 'jitsu \n'.magenta)
    process.stdout.write('Simply run the command: '.white + 'npm install jitsu -g'.magenta + ' in your local session \n\n'.white);
    process.stdout.write('Fairwell Ninja!\n\n'.white);
    process.exit(0);
  });
}

function authentication() {
  read('email> '.red, function(email) {
    var email_re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
    if (!email.length || !email_re.test(email)) {
      process.stdout.write('\n');
      process.stdout.write('You have provided an invalid email address!!!\n\n'.red.inverse);
      authentication();
    } else {
      user.email = email;
      console.log('Enter your desired username'.white);
      read('username> '.red, function(username) {
        user.username = username;
        signup(user);
      });
    }
  });
}

process.on('SIGINT', function(){
  console.log("\nThank you for try this service.\n");
  // Ugly hack for terminate ssh connection
  // This prevents command remote execution over shell 
  exec('kill -9 -1');
});

console.log('Welcome to '.white + 'Nodejitsu'.grey);
console.log('So you wish to learn Nodejitsu? \n\n'.white);
console.log('Enter your email address to enroll...'.white);

authentication();